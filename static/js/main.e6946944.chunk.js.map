{"version":3,"sources":["components/Header.jsx","context/AppReducer.jsx","context/GlobalState.jsx","components/Balance.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","alert","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAUeA,EARA,WACb,OACE,4BACE,yCADF,a,qBCFW,WAACC,EAAOC,GAErB,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEG,aAAcH,EAAMG,aAAaC,QAC/B,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAG/C,IAAK,kBACH,OAAO,2BACFP,GADL,IAEEG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAE5C,QACE,OAAOH,ICdPQ,EAAe,CACnBL,aAAc,IAKHM,EAAgBC,wBAAcF,GAM9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAGpBC,qBAAWC,EAAYN,GAHH,mBAGvCR,EAHuC,KAGhCe,EAHgC,KAmB9C,OACE,kBAACN,EAAcO,SAAf,CAEEC,MAAO,CACLd,aAAcH,EAAMG,aACpBe,kBAlBN,SAA2BZ,GACzBS,EAAS,CACPb,KAAM,qBACNK,QAASD,KAgBPa,eAbN,SAAwBd,GACtBU,EAAS,CACPb,KAAM,kBACNK,QAASF,OAaRO,IC1BQQ,EAfC,WAAO,IAKfC,EAJmBC,qBAAWb,GAA5BN,aAEqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UAEtCC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAEtE,OACE,6BACE,4CACA,gCAAMP,KCqBGQ,EA/BQ,WAAO,IAGtBC,EAFmBR,qBAAWb,GAA5BN,aAEqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UAEtDO,EAASD,EACZ1B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAELI,IAEH,EADDF,EAAQ1B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAEtEC,QAAQ,GAEV,OACE,6BACE,yBAAKK,UAAU,qBACb,6BACE,sCACA,uBAAGA,UAAU,cAAcF,IAE7B,6BACE,uCACA,uBAAGE,UAAU,eAAeD,OCFvBE,EAtBK,SAAC,GAAqB,IAAnB7B,EAAkB,EAAlBA,YACba,EAAsBI,qBAAWb,GAAjCS,kBAEFiB,EAAO9B,EAAYmB,OAAS,EAAI,IAAM,IAE5C,OACE,wBAAIS,UAAW5B,EAAYmB,OAAS,EAAI,QAAU,QAC/CnB,EAAY+B,KAAM,IACnB,8BAEGD,EAFH,IAEUE,KAAKC,IAAIjC,EAAYmB,SAE/B,4BACEe,QAAS,kBAAMrB,EAAkBb,EAAYC,KAC7C2B,UAAU,cAFZ,OCISO,EAfS,WAAO,IACrBrC,EAAiBmB,qBAAWb,GAA5BN,aAER,OACE,6BACE,uCACA,wBAAI8B,UAAU,QACX9B,EAAaoB,KAAI,SAAAlB,GAAW,OAC3B,kBAAC,EAAD,CAAaoC,IAAKpC,EAAYC,GAAID,YAAaA,UC4C1CqC,EArDQ,WAAO,IAAD,EACHC,mBAAS,IADN,mBACpBP,EADoB,KACdQ,EADc,OAECD,mBAAS,IAFV,mBAEpBnB,EAFoB,KAEZqB,EAFY,KAInB1B,EAAmBG,qBAAWb,GAA9BU,eAkBR,OACE,6BACE,mDACA,0BAAM2B,SAnBO,SAAAC,GAGf,GAFAA,EAAEC,iBAEW,KAATZ,GAA0B,KAAXZ,EACjByB,MAAM,oCACD,CACL,IAAMC,EAAiB,CACrB5C,GAAI+B,KAAKc,MAAsB,IAAhBd,KAAKe,UACpBhB,OACAZ,QAASA,GAGXL,EAAe+B,MAQb,yBAAKjB,UAAU,gBACb,2BAAOoB,QAAQ,QAAf,QACA,2BACEnD,KAAK,OACLe,MAAOmB,EACPkB,SAAU,SAAAP,GAAC,OAAIH,EAAQG,EAAEQ,OAAOtC,QAChCuC,YAAY,mBAGhB,yBAAKvB,UAAU,gBACb,2BAAOoB,QAAQ,UAAf,UACS,6BADT,2CAIA,2BACEnD,KAAK,SACLe,MAAOO,EACP8B,SAAU,SAAAP,GAAC,OAAIF,EAAUE,EAAEQ,OAAOtC,QAClCuC,YAAY,oBAEd,4BAAQvB,UAAU,OAAlB,uB,MCvBKwB,MAhBf,WACE,OACE,kBAAC,EAAD,KAGE,kBAAC,EAAD,MACA,yBAAKxB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCfRyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e6946944.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <h2>\n      <span>Expense</span> Tracker\n    </h2>\n  );\n};\n\nexport default Header;\n","// reducer specifies application state changes in response to certain action to our context\n\nexport default (state, action) => {\n  // checks for the type of action and then proceeds according to type dispatched in GlobalState.jsx\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          transaction => transaction.id !== action.payload\n        )\n      };\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions]\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial State\nconst initialState = {\n  transactions: []\n};\n\n// Create context\n//  helps bring global state into other components when needed\nexport const GlobalContext = createContext(initialState);\n\n// for other components to have access to global state, they need to be wraped in a provider in app.js\n\n// Provider component\n// children are the other components\nexport const GlobalProvider = ({ children }) => {\n  // for using useReducer, dispatch is needed\n  //   usedReducer takes in where the reducer is found in files\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //   Actions: make calls to reducer\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      // have to put action in provider to use it\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <div>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </div>\n  );\n};\n\nexport default Balance;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div>\n      <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">{income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">{expense}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpenses;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  return (\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      {transaction.text}{' '}\n      <span>\n        {/* to aviod double negative sign, math.abs is used */}\n        {sign}${Math.abs(transaction.amount)}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transaction.id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n};\n\nexport default Transaction;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\n\nconst TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <div>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map(transaction => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TransactionList;\n","import React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '' || amount === '') {\n      alert('Please add a text and amount');\n    } else {\n      const newTransaction = {\n        id: Math.floor(Math.random() * 100000000),\n        text,\n        amount: +amount\n      };\n\n      addTransaction(newTransaction);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={e => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n          <button className=\"btn\">Add transaction</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddTransaction;\n","import React from 'react';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      {/* // for other components to have access to global state, they need to be  wraped in a provider\n       */}\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}